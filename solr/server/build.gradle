/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'java-library'
apply plugin: org.apache.lucene.gradle.dist.PartOfDist

jar.enabled = false

configurations {
  startJar
}

dependencies {
  
  runtimeOnly ('com.lmax:disruptor')
  runtimeOnly ('org.slf4j:jcl-over-slf4j')
  runtimeOnly ('org.slf4j:jul-to-slf4j')
  runtimeOnly ('org.slf4j:slf4j-api')
  
  runtimeOnly ('org.eclipse.jetty:jetty-alpn-java-server')
  runtimeOnly ('org.eclipse.jetty:jetty-alpn-java-client')
  
  implementation ('org.apache.logging.log4j:log4j-1.2-api')
  implementation ('org.apache.logging.log4j:log4j-api')
  implementation ('org.apache.logging.log4j:log4j-core')
  implementation ('org.apache.logging.log4j:log4j-slf4j-impl')
  
  implementation ('io.dropwizard.metrics:metrics-core')
  implementation ('io.dropwizard.metrics:metrics-graphite')
  implementation ('io.dropwizard.metrics:metrics-jetty9')
  implementation ('io.dropwizard.metrics:metrics-jvm')
  
  implementation ('org.eclipse.jetty:jetty-continuation')
  implementation ('org.eclipse.jetty:jetty-deploy')
  implementation ('org.eclipse.jetty:jetty-http')
  implementation ('org.eclipse.jetty:jetty-io')
  implementation ('org.eclipse.jetty:jetty-jmx')
  implementation ('org.eclipse.jetty:jetty-rewrite')
  implementation ('org.eclipse.jetty:jetty-security')
  implementation ('org.eclipse.jetty:jetty-server')
  implementation ('org.eclipse.jetty:jetty-servlet')
  implementation ('org.eclipse.jetty:jetty-servlets')
  implementation ('org.eclipse.jetty:jetty-util')
  implementation ('org.eclipse.jetty:jetty-webapp')
  implementation ('org.eclipse.jetty:jetty-xml')
  implementation 'org.eclipse.jetty:jetty-alpn-server'
  implementation 'org.eclipse.jetty:jetty-alpn-client'
  
  implementation ('org.eclipse.jetty.http2:http2-server')
  implementation ('org.eclipse.jetty.http2:http2-common')
  implementation ('org.eclipse.jetty.http2:http2-hpack')
  implementation ('org.eclipse.jetty.http2:http2-http-client-transport')
  
  implementation ('javax.servlet:javax.servlet-api')
  
  startJar 'org.eclipse.jetty:jetty-start::shaded'
}

task getStartJar(type: Copy) {
  from {project.configurations.startJar.files} {
    include 'jetty-start*'
  }
  into project.projectDir
  rename { String fileName ->
    'start.jar'
  }
}

unusedDeps {
  jarExclude '.*?\\.jar' // solr-server creates no jar, so we don't currently check it
}

