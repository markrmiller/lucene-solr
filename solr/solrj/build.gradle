/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
  id 'java-library'
  id 'eclipse'
}

repositories{
  mavenCentral()
}

dependencies {
  
  runtimeOnly ('org.eclipse.jetty:jetty-security') { transitive = false }
  
  implementation ('org.apache.zookeeper:zookeeper') { transitive = false }
  implementation ('org.apache.httpcomponents:httpclient') { transitive = false }
  implementation ('org.apache.httpcomponents:httpmime') { transitive = false }
  implementation ('org.apache.httpcomponents:httpcore') { transitive = false }
  implementation ('commons-io:commons-io') { transitive = false }
  implementation ('org.apache.commons:commons-math3') { transitive = false }

  implementation ('org.noggit:noggit') { transitive = false }
  implementation ('org.slf4j:slf4j-api') { transitive = false }
  implementation ('org.slf4j:jcl-over-slf4j') { transitive = false }
  implementation ('org.eclipse.jetty.http2:http2-client') { transitive = false }
  implementation ('org.eclipse.jetty.http2:http2-http-client-transport') { transitive = false }
  implementation ('org.eclipse.jetty.http2:http2-common') { transitive = false }
  implementation ('org.eclipse.jetty.http2:http2-hpack') { transitive = false }
  implementation ('org.eclipse.jetty:jetty-client') { transitive = false }
  implementation ('org.eclipse.jetty:jetty-util') { transitive = false }
  implementation ('org.eclipse.jetty:jetty-http') { transitive = false }
  implementation ('commons-codec:commons-codec') { transitive = false }
  
  testImplementation ('org.eclipse.jetty:jetty-servlet') { transitive = false }
  testImplementation ('io.dropwizard.metrics:metrics-core') { transitive = false }
  testImplementation ('org.restlet.jee:org.restlet') { transitive = false }
  testImplementation ('org.restlet.jee:org.restlet.ext.servlet') { transitive = false }
  testImplementation ('org.eclipse.jetty:jetty-webapp') { transitive = false }
  testImplementation ('org.eclipse.jetty:jetty-server') { transitive = false }
  testImplementation ('org.eclipse.jetty:jetty-xml') { transitive = false }
  testImplementation ('commons-collections:commons-collections') { transitive = false }
  testImplementation ('com.google.guava:guava') { transitive = false }
  testImplementation ('org.apache.commons:commons-compress') { transitive = false }
  testImplementation ('org.mockito:mockito-core') { transitive = false }
  testImplementation ('net.bytebuddy:byte-buddy') { transitive = false }
  testImplementation ('org.objenesis:objenesis') { transitive = false }
  testImplementation ('org.apache.commons:commons-lang3') { transitive = false }
  testImplementation ('javax.servlet:javax.servlet-api') { transitive = false }
  
  testImplementation project(':solr:solr-core')
  testImplementation project(':lucene:lucene-core')
  testImplementation project(':solr:solr-test-framework')
  testImplementation project(':lucene:lucene-test-framework')
  testImplementation project(':lucene:analysis:analyzers-common')
  testImplementation project(':solr:example:example-DIH')
}
