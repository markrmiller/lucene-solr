/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'java-library'
apply plugin: org.apache.lucene.gradle.PartOfDist

dependencies {
  implementation project(':solr:solr-core')
  implementation project(':solr:solr-solrj')
  implementation project(':lucene:lucene-core')
  
  implementation ('com.fasterxml.jackson.core:jackson-core') { transitive = false }
  implementation ('com.fasterxml.jackson.core:jackson-databind') { transitive = false }
  implementation ('com.fasterxml.jackson.core:jackson-annotations') { transitive = false }
  implementation ('com.google.guava:guava') { transitive = false }
  implementation ('org.noggit:noggit') { transitive = false }
  implementation ('commons-codec:commons-codec') { transitive = false }
  implementation ('commons-io:commons-io') { transitive = false }
  implementation ('org.apache.commons:commons-lang3') { transitive = false }
  implementation ('io.dropwizard.metrics:metrics-core') { transitive = false }
  
  implementation ('org.slf4j:slf4j-api') { transitive = false }
  
  // if we try to make this compileOnly or testImplementation forbidden apis fails?
  implementation ('javax.servlet:javax.servlet-api') { transitive = false }
  
  testRuntimeOnly ('org.noggit:noggit') { transitive = false }
  
  testRuntimeOnly ('javax.servlet:javax.servlet-api') { transitive = false }
  testRuntimeOnly ('commons-fileupload:commons-fileupload') { transitive = false }
  testRuntimeOnly ('org.apache.httpcomponents:httpclient') { transitive = false }
  testRuntimeOnly ('org.apache.httpcomponents:httpcore') { transitive = false }
  testRuntimeOnly ('org.apache.zookeeper:zookeeper') { transitive = false }
  testRuntimeOnly ('org.eclipse.jetty:jetty-server') { transitive = false }
  testRuntimeOnly ('org.eclipse.jetty:jetty-util') { transitive = false }
  testRuntimeOnly ('org.eclipse.jetty:jetty-client') { transitive = false }
  testRuntimeOnly ('org.eclipse.jetty:jetty-http') { transitive = false }
  testRuntimeOnly ('org.eclipse.jetty:jetty-io') { transitive = false }
  testRuntimeOnly ('org.eclipse.jetty:jetty-alpn-java-client') { transitive = false }
  testRuntimeOnly ('org.eclipse.jetty:jetty-alpn-client') { transitive = false }
  testRuntimeOnly ('org.eclipse.jetty:jetty-security') { transitive = false }
  testRuntimeOnly ('org.eclipse.jetty:jetty-servlet') { transitive = false }
  testRuntimeOnly ('org.eclipse.jetty:jetty-client') { transitive = false }
  testRuntimeOnly ('org.apache.commons:commons-lang3') { transitive = false }
  testRuntimeOnly ('org.rrd4j:rrd4j') { transitive = false }
  
  testRuntimeOnly ('io.dropwizard.metrics:metrics-jvm') { transitive = false }
  testRuntimeOnly ('io.dropwizard.metrics:metrics-jmx') { transitive = false }
  
  testRuntimeOnly ('org.eclipse.jetty:jetty-alpn-server') { transitive = false }
  testRuntimeOnly ('org.eclipse.jetty.http2:http2-server') { transitive = false }
  testRuntimeOnly ('org.eclipse.jetty.http2:http2-client') { transitive = false }
  testRuntimeOnly ('org.eclipse.jetty.http2:http2-http-client-transport') { transitive = false }
  testRuntimeOnly ('org.eclipse.jetty.http2:http2-common') { transitive = false }
  testRuntimeOnly ('org.eclipse.jetty.http2:http2-hpack') { transitive = false }
  testRuntimeOnly ('org.eclipse.jetty:jetty-http') { transitive = false }
  testRuntimeOnly ('org.eclipse.jetty:jetty-client') { transitive = false }
  
  testRuntimeOnly ('io.dropwizard.metrics:metrics-core') { transitive = false }
  testRuntimeOnly ('io.dropwizard.metrics:metrics-jvm') { transitive = false }
  testRuntimeOnly ('io.dropwizard.metrics:metrics-jmx') { transitive = false }
  
  testRuntimeOnly ('org.apache.httpcomponents:httpmime') { transitive = false }
  
  testRuntimeOnly ('org.restlet.jee:org.restlet') { transitive = false }
  testRuntimeOnly ('org.restlet.jee:org.restlet.ext.servlet') { transitive = false }
  
  testRuntimeOnly ('commons-collections:commons-collections') { transitive = false }
  testRuntimeOnly ('commons-io:commons-io') { transitive = false }
  testRuntimeOnly ('org.slf4j:jcl-over-slf4j') { transitive = false }
  
  testRuntimeOnly project(':lucene:analysis:lucene-analyzers-common')
  testRuntimeOnly project(':lucene:lucene-codecs')
  testRuntimeOnly project(':lucene:lucene-join')
  testRuntimeOnly project(':lucene:lucene-highlighter')
  testRuntimeOnly project(':lucene:lucene-suggest')
  testRuntimeOnly project(':lucene:lucene-grouping')
  testRuntimeOnly project(':lucene:lucene-sandbox')
  testRuntimeOnly project(':lucene:lucene-queries')
  testRuntimeOnly project(':lucene:lucene-misc')
  
  testImplementation project(':lucene:lucene-test-framework')
  testImplementation project(':solr:solr-test-framework')
}