/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'java-library'
apply plugin: 'maven-publish'
apply plugin: org.apache.lucene.gradle.PartOfDist

dependencies {
  
  implementation project(':lucene:lucene-core')
  implementation project(':solr:solr-core')
  implementation project(':solr:solr-solrj')
  implementation project(':lucene:analysis:lucene-analyzers-common')
  
  implementation ('org.slf4j:slf4j-api')
  api ('org.apache.tika:tika-core') { transitive = false }
  api ('org.apache.tika:tika-parsers') { transitive = false }
  implementation ('com.healthmarketscience.jackcess:jackcess') { transitive = false }
  implementation ('com.healthmarketscience.jackcess:jackcess-encrypt') { transitive = false }
  implementation ('org.gagravarr:vorbis-java-tika') { transitive = false }
  implementation ('org.gagravarr:vorbis-java-core') { transitive = false }
  //implementation ('org.apache.james:apache-mime4j-core') { transitive = false }
  //implementation ('org.apache.james:apache-mime4j-dom') { transitive = false }
  implementation ('org.apache.commons:commons-compress') { transitive = false }
  implementation ('org.apache.pdfbox:pdfbox') { transitive = false }
  implementation ('org.apache.pdfbox:pdfbox-tools') { transitive = false }
  implementation ('org.apache.pdfbox:fontbox') { transitive = false }
  implementation ('org.apache.pdfbox:jempbox') { transitive = false }
  implementation ('org.bouncycastle:bcmail-jdk15on') { transitive = false }
  implementation ('org.bouncycastle:bcpkix-jdk15on') { transitive = false }
  implementation ('org.bouncycastle:bcprov-jdk15on') { transitive = false }
  implementation ('org.apache.poi:poi') { transitive = false }
  implementation ('org.apache.poi:poi-scratchpad') { transitive = false }
  implementation ('org.apache.poi:poi-ooxml') { transitive = false }
  implementation ('org.apache.poi:poi-ooxml-schemas') { transitive = false }
  implementation ('org.apache.xmlbeans:xmlbeans') { transitive = false }
  implementation ('org.apache.commons:commons-collections4') { transitive = false }
  implementation ('com.github.virtuald:curvesapi') { transitive = false }
  implementation ('org.ccil.cowan.tagsoup:tagsoup') { transitive = false }
  implementation ('com.googlecode.mp4parser:isoparser') { transitive = false }
  implementation ('org.aspectj:aspectjrt') { transitive = false }
  implementation ('com.drewnoakes:metadata-extractor') { transitive = false }
  implementation ('de.l3s.boilerpipe:boilerpipe') { transitive = false }
  implementation ('com.rometools:rome') { transitive = false }
  implementation ('com.rometools:rome-utils') { transitive = false }
  implementation ('org.jdom:jdom2') { transitive = false }
  implementation ('com.googlecode.juniversalchardet:juniversalchardet') { transitive = false }
  implementation ('org.tukaani:xz') { transitive = false }
  implementation ('com.adobe.xmp:xmpcore') { transitive = false }
  implementation ('com.pff:java-libpst') { transitive = false }
  implementation ('org.tallison:jmatio') { transitive = false }
  implementation ('com.epam:parso') { transitive = false }
  implementation ('org.brotli:dec') { transitive = false }
  implementation ('com.ibm.icu:icu4j')
  implementation ('xerces:xercesImpl') { transitive = false }
  implementation ('commons-io:commons-io')
  implementation ('commons-codec:commons-codec')
  implementation ('com.google.guava:guava')
  
  testImplementation project(':lucene:lucene-test-framework')
  testImplementation project(':solr:solr-test-framework')
  
}

unusedDeps {
  jarExclude 'dec-.*?\\.jar' // used by pdfbox
  jarExclude 'fontbox-.*?\\.jar' // used by pdfbox
  
  jarExclude 'curvesapi-.*?\\.jar' // used by tikaparsers
  jarExclude 'boilerpipe-.*?\\.jar' // used by tikaparsers
  jarExclude 'bcmail-jdk15on-.*?\\.jar' // used by tikaparsers
  jarExclude 'jackcess-.*?\\.jar' // used by tikaparsers
  jarExclude 'jackcess-encrypt-.*?\\.jar' // used by tikaparsers
  jarExclude 'java-libpst-.*?\\.jar' // used by tikaparsers
  jarExclude 'jdom2-.*?\\.jar' // used by tikaparsers, rome
  jarExclude 'jempbox-.*?\\.jar' // used by tikaparsers
  jarExclude 'jmatio-.*?\\.jar' // used by tikaparsers, rome
  jarExclude 'juniversalchardet-.*?\\.jar' // used by tikaparsers
  jarExclude 'metadata-extractor-.*?\\.jar' // used by tikaparsers
  jarExclude 'parso-.*?\\.jar' // used by tikaparsers
  jarExclude 'pdfbox-.*?\\.jar' // used by tikaparsers
  jarExclude 'vorbis-java-core-.*?\\.jar' // used by tikaparsers
  jarExclude 'xmpcore-.*?\\.jar' // used by tika xmp
  jarExclude 'xz-.*?\\.jar' // used by commons compress
  jarExclude 'aspectjrt-.*?\\.jar' // used by isoparser
  jarExclude 'icuj-.*?\\.jar' // used by tikaparsers
  jarExclude 'vorbis-java-tika-.*?\\.jar' // used by tikaparsers
  jarExclude 'poi-scratchpad-.*?\\.jar' // used by tika
  jarExclude 'tagsoup-.*?\\.jar' // used by tikaparsers
  jarExclude 'rome-.*?\\.jar' // used by tikaparsers
  jarExclude 'isoparser-.*?\\.jar' // used by tikaparsers
  jarExclude 'icu4j-.*?\\.jar' // used by tikaparsers
  
}

missingDeps {
  depExclude  '**/poi-ooxml-schemas*.dot' // we don't include many of these deps
  
  classExclude 'javax\\.xml\\.bind\\.DatatypeConverter' // used by poi
  
  addExclusionsFrom(project(':solr:solr-core')) // add solr-core exclusions
}

