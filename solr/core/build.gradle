/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

 import org.apache.lucene.gradle.UnusedDeps
 
apply plugin: 'java-library'
apply plugin: 'maven-publish'
apply plugin: org.apache.lucene.gradle.PartOfDist

archivesBaseName = 'solr-core'

dependencies {
  
  runtimeOnly project(':lucene:analysis:lucene-analyzers-phonetic')
  implementation project(':lucene:lucene-core')
  implementation project(':lucene:lucene-codecs')
  implementation project(':lucene:analysis:lucene-analyzers-common')
  implementation project(':lucene:analysis:lucene-analyzers-kuromoji')
  implementation project(':lucene:analysis:lucene-analyzers-nori')
  implementation project(':lucene:lucene-suggest')
  implementation project(':lucene:lucene-queries')
  implementation project(':lucene:lucene-highlighter')
  implementation project(':lucene:lucene-spatial-extras')
  implementation project(':lucene:lucene-grouping')
  implementation project(':lucene:lucene-classification')
  implementation project(':lucene:lucene-expressions')
  implementation project(':lucene:lucene-sandbox')
  implementation project(':lucene:lucene-queryparser')
  implementation project(':lucene:lucene-misc')
  implementation project(':lucene:lucene-join')
  implementation project(':solr:solr-solrj')
  
  // kerb, kerby, and curator deps used for security and auth with zk/hdfs/kerberos
  runtimeOnly ('org.apache.curator:curator-recipes') {
    exclude group: '*', module: '*' // brings in a lot we don't use
  }
  runtimeOnly ('org.apache.kerby:kerb-core')
  runtimeOnly ('org.apache.kerby:kerb-util')
  runtimeOnly ('org.apache.kerby:kerby-asn1')
  runtimeOnly ('org.apache.kerby:kerby-pkix')
  
  compileOnly ('javax.servlet:javax.servlet-api')
  
  // TODO: this is not great
  implementation ('org.apache.logging.log4j:log4j-slf4j-impl')

  implementation ('org.slf4j:slf4j-api')
  implementation ('org.slf4j:jcl-over-slf4j')
  implementation ('org.apache.zookeeper:zookeeper') {
    exclude group: '*', module: '*' // zk has many deps we don't need
  }
  implementation ('org.apache.httpcomponents:httpclient')
  implementation ('org.apache.httpcomponents:httpcore')
  implementation ('org.codehaus.woodstox:stax2-api')
  implementation ('org.codehaus.woodstox:woodstox-core-asl')
  implementation ('io.dropwizard.metrics:metrics-core') {
    exclude group: 'com.rabbitmq', module: 'amqp-client' // we don't use this
  }
  implementation ('io.dropwizard.metrics:metrics-graphite') {
    exclude group: 'com.rabbitmq', module: 'amqp-client' // we don't use this
  }
  implementation ('io.dropwizard.metrics:metrics-jvm')
  implementation ('io.dropwizard.metrics:metrics-jmx')
  api ('commons-codec:commons-codec') // api because of forbidden apis :(
  implementation ('commons-io:commons-io')
  implementation ('org.apache.commons:commons-exec')
  implementation ('commons-fileupload:commons-fileupload')
  implementation ('commons-cli:commons-cli')
  implementation ('org.apache.commons:commons-text')
  api ('com.google.guava:guava') {  // api because of forbidden apis :(
    exclude group: '*', module: '*' // many annotation deps we don't need
  }
  implementation ('org.locationtech.spatial4j:spatial4j')
  implementation ('org.apache.commons:commons-math3')
  implementation ('org.ow2.asm:asm')
  
  implementation ('org.restlet.jee:org.restlet')
  implementation ('org.restlet.jee:org.restlet.ext.servlet')
  implementation ('com.carrotsearch:hppc')
  
  implementation ('org.apache.logging.log4j:log4j-api')
  implementation ('org.apache.logging.log4j:log4j-core')
  implementation ('org.apache.logging.log4j:log4j-1.2-api')
  implementation ('org.slf4j:jcl-over-slf4j')
  
  implementation ('com.fasterxml.jackson.core:jackson-core')
  implementation ('com.fasterxml.jackson.core:jackson-databind')
  implementation ('com.fasterxml.jackson.core:jackson-annotations')
  implementation ('com.fasterxml.jackson.dataformat:jackson-dataformat-smile')
  implementation ('org.apache.hadoop:hadoop-auth') {
    exclude group: '*', module: '*' // brings in a lot we don't use
  }
  implementation ('org.apache.hadoop:hadoop-common') {
    exclude group: '*', module: '*' // brings in a lot we don't use
  }
  implementation ('org.apache.hadoop:hadoop-hdfs-client') {
    exclude group: '*', module: '*' // brings in a lot we don't use
  }
  implementation ('org.apache.hadoop:hadoop-annotations') {
    exclude group: '*', module: '*' // brings in a lot we don't use
  }
  implementation ('commons-collections:commons-collections')
  implementation ('commons-beanutils:commons-beanutils')
  implementation ('com.github.ben-manes.caffeine:caffeine')
  implementation ('com.google.re2j:re2j')
  implementation ('org.apache.commons:commons-lang3')
  implementation ('org.apache.htrace:htrace-core4')
  implementation ('org.apache.curator:curator-framework') {
    exclude group: '*', module: '*' // brings in a lot we don't use
  }
  implementation ('org.apache.curator:curator-client')  {
    exclude group: '*', module: '*' // brings in a lot we don't use
  }
  
  implementation ('com.tdunning:t-digest')
  implementation ('org.apache.calcite:calcite-core') {
    exclude group: '*', module: '*' // brings in a lot we don't use
  }
  implementation ('org.apache.calcite:calcite-linq4j') {
    exclude group: '*', module: '*' // brings in a lot we don't use
  }
  implementation ('org.apache.calcite.avatica:avatica-core') {
    exclude group: '*', module: '*' // brings in a lot we don't use
  }
  implementation ('org.apache.commons:commons-lang3')
  implementation ('org.codehaus.janino:commons-compiler')

  implementation ('org.rrd4j:rrd4j')
  implementation ('org.bitbucket.b_c:jose4j')
  
  implementation ('org.eclipse.jetty:jetty-alpn-server')
  implementation ('org.eclipse.jetty.http2:http2-server')
  implementation ('org.eclipse.jetty.http2:http2-common')
  implementation ('org.eclipse.jetty:jetty-server')
  implementation ('org.eclipse.jetty:jetty-client')
  implementation ('org.eclipse.jetty:jetty-util')
  implementation ('org.eclipse.jetty:jetty-servlet')
  implementation ('org.eclipse.jetty:jetty-server')
  
  testRuntimeOnly ('com.lmax:disruptor')
  
  // kerby
  testRuntimeOnly ('org.apache.kerby:kerb-core')
  testRuntimeOnly ('org.apache.kerby:kerby-asn1')
  testRuntimeOnly ('org.apache.kerby:kerby-pkix')
  testRuntimeOnly ('org.apache.kerby:kerby-config')
  testRuntimeOnly ('org.apache.kerby:kerb-crypto')
  testRuntimeOnly ('org.apache.kerby:kerb-util')
  
  // hdfs
  testRuntimeOnly ('org.apache.commons:commons-configuration2')
  
  testImplementation ('org.eclipse.jetty:jetty-xml')
  testImplementation ('org.mockito:mockito-core') { transitive = false }
  testImplementation ('net.bytebuddy:byte-buddy') { transitive = false }
  testImplementation ('org.objenesis:objenesis') { transitive = false }
  testImplementation ('commons-logging:commons-logging') { transitive = false }
  testImplementation ('io.netty:netty-all') { transitive = false }
  testImplementation ('org.apache.commons:commons-text')
  testImplementation ('org.eclipse.jetty:jetty-webapp') { transitive = false }
  testImplementation ('com.sun.jersey:jersey-servlet:1.19.4') { transitive = false }
  
  // hdfs
  testImplementation ('org.apache.hadoop:hadoop-minicluster') { transitive = false }
  testImplementation ('org.apache.hadoop:hadoop-common::tests') { transitive = false }
  testImplementation ('org.apache.hadoop:hadoop-hdfs') { transitive = false }
  testImplementation ('org.apache.hadoop:hadoop-hdfs::tests') { transitive = false }
  testImplementation ('org.apache.hadoop:hadoop-minikdc') { transitive = false }
  testImplementation ('com.google.protobuf:protobuf-java')
  
  // kerby
  testImplementation ('org.apache.kerby:kerb-client') { transitive = false }
  testImplementation ('org.apache.kerby:kerb-common') { transitive = false }
  testImplementation ('org.apache.kerby:kerb-identity') { transitive = false }
  testImplementation ('org.apache.kerby:kerb-server') { transitive = false }
  testImplementation ('org.apache.kerby:kerb-simplekdc') { transitive = false }
  testImplementation ('org.apache.kerby:kerb-admin') { transitive = false }
  testImplementation ('org.apache.kerby:kerby-kdc') { transitive = false }
  
  testImplementation project(path: ':lucene:lucene-backward-codecs', configuration: 'testOutput')
  testImplementation project(path: ':lucene:lucene-queryparser', configuration: 'testOutput')
  testImplementation project(':lucene:lucene-test-framework')
  testImplementation project(':solr:solr-test-framework')
  testImplementation project(':lucene:analysis:lucene-analyzers-icu')
  testImplementation project(':solr:contrib:solr-contrib-analysis-extras')
  
}

ratSources {
  excludes = ['**/htmlStripReaderTest.html', '**/*.iml']
}

forbiddenApisTest {
  exclude 'org/apache/solr/internal/**'
  exclude 'org/apache/hadoop/**'
}

task javacc(type: org.apache.lucene.gradle.JavaCC) {
  inputFile file("${projectDir}/src/java/org/apache/solr/parser/QueryParser.jj")
  target file("${projectDir}/src/java/org/apache/lucene/analysis/standard")
}
